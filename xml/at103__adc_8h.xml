<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="at103__adc_8h" kind="file" language="C++">
    <compoundname>at103_adc.h</compoundname>
    <includes local="yes">at103.h</includes>
    <incdepgraph>
      <node id="1">
        <label>libraries/driver/inc/at103_adc.h</label>
        <link refid="at103__adc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>at103.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structADC__InitTypeDef" prot="public">ADC_InitTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="at103__adc_8h_1a40ec353803e9470a5721ef5bf0b1ab24" prot="public" static="no">
        <name>ADC_Channel_0</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
<para>ADC_channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="42" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a0b04cebf8d62085eca6dc7daa3d5d3f0" prot="public" static="no">
        <name>ADC_Channel_1</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="43" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1abc66e2529583e11b591efd2df7070571" prot="public" static="no">
        <name>ADC_Channel_2</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="44" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a9f93cbacd030f1c79f96f8889b0cdee6" prot="public" static="no">
        <name>ADC_Channel_3</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="45" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1afc7218417f729659dd8f06185cc2eafa" prot="public" static="no">
        <name>ADC_Channel_4</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="46" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a42822abae41faabde2a2da877e0cc854" prot="public" static="no">
        <name>ADC_Channel_5</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="47" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a7e24a73eec4aeb7d8e2f9008825ceacb" prot="public" static="no">
        <name>ADC_Channel_6</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="48" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a9723aa5fe6b9f4af1ffd3b90e6eef8d1" prot="public" static="no">
        <name>ADC_Channel_7</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="49" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a99b2c662d4068152e0e80a048036cc48" prot="public" static="no">
        <name>ADC_Channel_8</name>
        <initializer>((uint8_t)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="50" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a01a61c428be0cb69327e428e32a42aa1" prot="public" static="no">
        <name>ADC_Channel_9</name>
        <initializer>((uint8_t)0x09)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="51" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1abfa98b580f49a82a83dcb1df32efceca" prot="public" static="no">
        <name>ADC_Channel_10</name>
        <initializer>((uint8_t)0x0A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="52" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a5bfc40d938f384f22665f6e2dd945cfd" prot="public" static="no">
        <name>ADC_Channel_11</name>
        <initializer>((uint8_t)0x0B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="53" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1aa1e35f7870ae8f05013a681293175299" prot="public" static="no">
        <name>ADC_Channel_12</name>
        <initializer>((uint8_t)0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="54" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a517cda911256f722eb067d7140663230" prot="public" static="no">
        <name>ADC_Channel_13</name>
        <initializer>((uint8_t)0x0D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="55" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1af1830a03fe4a3820fde4f41ba907c394" prot="public" static="no">
        <name>ADC_Channel_14</name>
        <initializer>((uint8_t)0x0E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="56" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a01431a7b4e388beb241328874abdf88c" prot="public" static="no">
        <name>ADC_Channel_15</name>
        <initializer>((uint8_t)0x0F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="57" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a52fb09ae9a0333a0e071da106466c659" prot="public" static="no">
        <name>ADC_Channel_16</name>
        <initializer>((uint8_t)0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="58" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a58cdfe3a5625f198116d163b09698cea" prot="public" static="no">
        <name>ADC_Channel_17</name>
        <initializer>((uint8_t)0x11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="59" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a1efc096b8d4a8d15c4a7d91f5c03c6c7" prot="public" static="no">
        <name>ADC_Channel_TempSensor</name>
        <initializer>((uint8_t)ADC_Channel_16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="61" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a5d48ded5138e6f1efe3a7634eff4d125" prot="public" static="no">
        <name>ADC_Channel_Vrefint</name>
        <initializer>((uint8_t)ADC_Channel_17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="62" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1aba41910dcb2b449c613a5ef638862e77" prot="public" static="no">
        <name>IS_ADC_CHANNEL</name>
        <param><defname>CHANNEL</defname></param>
        <initializer>                                 (((CHANNEL) == <ref refid="at103__adc_8h_1a40ec353803e9470a5721ef5bf0b1ab24" kindref="member">ADC_Channel_0</ref>) || ((CHANNEL) == ADC_Channel_1) || \
                                 ((CHANNEL) == ADC_Channel_2) || ((CHANNEL) == ADC_Channel_3) || \
                                 ((CHANNEL) == ADC_Channel_4) || ((CHANNEL) == ADC_Channel_5) || \
                                 ((CHANNEL) == ADC_Channel_6) || ((CHANNEL) == ADC_Channel_7) || \
                                 ((CHANNEL) == ADC_Channel_8) || ((CHANNEL) == ADC_Channel_9) || \
                                 ((CHANNEL) == ADC_Channel_10) || ((CHANNEL) == ADC_Channel_11) || \
                                 ((CHANNEL) == ADC_Channel_11) || ((CHANNEL) == ADC_Channel_12) || \
                                 ((CHANNEL) == ADC_Channel_13) || ((CHANNEL) == ADC_Channel_14) || \
                                 ((CHANNEL) == ADC_Channel_15) || ((CHANNEL) == ADC_Channel_16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="64" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1af5d6bd0153464912e0eaccb1af1aefb2" prot="public" static="no">
        <name>IS_ADC_ALL_PERIPH</name>
        <param><defname>PERIPH</defname></param>
        <initializer>                                   (((PERIPH) == ADC1) || \
                                   ((PERIPH) == ADC2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="74" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a2754d3a35559dc10e3d6a7d920e83432" prot="public" static="no">
        <name>ADC_Mode_Independent</name>
        <initializer>((uint32_t)0x0000)</initializer>
        <briefdescription>
<para>ADC_mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Independent mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="80" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a6014249f37aaa425bb691305c100e080" prot="public" static="no">
        <name>ADC_Mode_RegInjectSimult</name>
        <initializer>((uint32_t)0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combined regular simultaneous + injected simultaneous mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="81" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1ae3d5fbf93f60d75534364bf9db78f632" prot="public" static="no">
        <name>ADC_Mode_RegSimult_AlterTrig</name>
        <initializer>((uint32_t)0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combined regular simultaneous + alternate trigger mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="82" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a2fc8a737f7b2375309bccbcb7fdbbfeb" prot="public" static="no">
        <name>ADC_Mode_InjecSimult_FastInterl</name>
        <initializer>((uint32_t)0x0003)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combined injected simultaneous + fast interleaved mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="83" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a760e65b105f3a2363233eb0109956e72" prot="public" static="no">
        <name>ADC_Mode_InjectSimult_SlowInterl</name>
        <initializer>((uint32_t)0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combined injected simultaneous + slow Interleaved mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="84" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1adf64d2403079f944f9e034c5e87c7356" prot="public" static="no">
        <name>ADC_Mode_InjectSimult</name>
        <initializer>((uint32_t)0x0005)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Injected simultaneous mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="85" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a71298f7453c2b4392a9c622328b3c93d" prot="public" static="no">
        <name>ADC_Mode_RegSimult</name>
        <initializer>((uint32_t)0x0006)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regular simultaneous mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="86" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a843ecdd53625e2088e91819e43106a7a" prot="public" static="no">
        <name>ADC_Mode_FastInterl</name>
        <initializer>((uint32_t)0x0007)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fast interleaved mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="87" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a8b81e27e98dbc3d1e31452dbad167cd5" prot="public" static="no">
        <name>ADC_Mode_SlowInterl</name>
        <initializer>((uint32_t)0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slow interleaved mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="88" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a5595f12dc485e301ba3bad0e165586c1" prot="public" static="no">
        <name>ADC_Mode_AlterTrig</name>
        <initializer>((uint32_t)0x0009)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alternate trigger mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="89" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a4abf4c7de28a42d7b124c9e403a6e537" prot="public" static="no">
        <name>IS_ADC_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>                           (((MODE) == <ref refid="at103__adc_8h_1a2754d3a35559dc10e3d6a7d920e83432" kindref="member">ADC_Mode_Independent</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a6014249f37aaa425bb691305c100e080" kindref="member">ADC_Mode_RegInjectSimult</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1ae3d5fbf93f60d75534364bf9db78f632" kindref="member">ADC_Mode_RegSimult_AlterTrig</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a2fc8a737f7b2375309bccbcb7fdbbfeb" kindref="member">ADC_Mode_InjecSimult_FastInterl</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a760e65b105f3a2363233eb0109956e72" kindref="member">ADC_Mode_InjectSimult_SlowInterl</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1adf64d2403079f944f9e034c5e87c7356" kindref="member">ADC_Mode_InjectSimult</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a71298f7453c2b4392a9c622328b3c93d" kindref="member">ADC_Mode_RegSimult</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a843ecdd53625e2088e91819e43106a7a" kindref="member">ADC_Mode_FastInterl</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a8b81e27e98dbc3d1e31452dbad167cd5" kindref="member">ADC_Mode_SlowInterl</ref>) || \
                           ((MODE) == <ref refid="at103__adc_8h_1a5595f12dc485e301ba3bad0e165586c1" kindref="member">ADC_Mode_AlterTrig</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="91" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a303f24361ea930f8214e9e68b63b244e" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC1</name>
        <initializer>((uint32_t)0x000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="102" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a8bf9fd9ad4e4c12ef41520ded2c3c332" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC2</name>
        <initializer>((uint32_t)0x020000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="103" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1adfeb40c1735b0ee50f8a5aafdd840cc6" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T2_CC2</name>
        <initializer>((uint32_t)0x060000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="104" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a1cf4549534a00fe2f5527ad783204098" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T3_TRGO</name>
        <initializer>((uint32_t)0x080000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="105" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a8f6a764b7de878c2e09bbb0d1061d69c" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T4_CC4</name>
        <initializer>((uint32_t)0x0A0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="106" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a640de59aeac8cc3d96b6db3497975d02" prot="public" static="no">
        <name>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO</name>
        <initializer>((uint32_t)0x0C0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="107" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a41ad03e2921f6de0fb75ae06d6046e63" prot="public" static="no">
        <name>ADC_ExternalTrigConv_T1_CC3</name>
        <initializer>((uint32_t)0x00040000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="109" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1a433a3845ed1792fa6359b763c955e9c2" prot="public" static="no">
        <name>ADC_ExternalTrigConv_None</name>
        <initializer>((uint32_t)0x000E0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="110" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="at103__adc_8h_1ac74e6054adbedd72822cacde69105318" prot="public" static="no">
        <name>IS_ADC_EXT_TRIG</name>
        <param><defname>REGTRIG</defname></param>
        <initializer>                                  (((REGTRIG) == ADC_ExternalTrigConv_T1_CC1) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T1_CC2) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T1_CC3) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T2_CC2) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T3_TRGO) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T4_CC4) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_None) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T3_CC1) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T2_CC3) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T8_CC1) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T8_TRGO) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T5_CC1) || \
                                  ((REGTRIG) == ADC_ExternalTrigConv_T5_CC3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="112" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga4bcdca9d903a8d7ae0560044fbfaf1f6" prot="public" static="no">
        <name>ADC_SampleTime_1Cycles</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
<para>ADC sampling_time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="131" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga7aeaf9d2e147655978dae6fd10134174" prot="public" static="no">
        <name>ADC_SampleTime_7Cycles</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="132" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gaba495c2911cdf31564626cbff0eacf53" prot="public" static="no">
        <name>ADC_SampleTime_13Cycles</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="133" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gad9b45e11b76b7046eddf67f72e2ad622" prot="public" static="no">
        <name>ADC_SampleTime_28Cycles</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="134" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga15fb26ec07ecf6259ab035e09c251b96" prot="public" static="no">
        <name>ADC_SampleTime_41Cycles</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="135" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga23afd2f4e5176ad2c98d01548a29fbfb" prot="public" static="no">
        <name>ADC_SampleTime_55Cycles</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="136" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gafb1c5cd8ecdffc4b2620ad9b83add56b" prot="public" static="no">
        <name>ADC_SampleTime_71Cycles</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="137" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gaebefee198f74d6abf1e6e927f4636b47" prot="public" static="no">
        <name>ADC_SampleTime_239Cycles</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="138" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" prot="public" static="no">
        <name>IS_ADC_SAMPLE_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>                                  (((TIME) == <ref refid="group__ADC__sampling__time_1ga4bcdca9d903a8d7ae0560044fbfaf1f6" kindref="member">ADC_SampleTime_1Cycles</ref>) || \
                                  ((TIME) == ADC_SampleTime_7Cycles) || \
                                  ((TIME) == ADC_SampleTime_13Cycles) || \
                                  ((TIME) == ADC_SampleTime_28Cycles) || \
                                  ((TIME) == ADC_SampleTime_41Cycles) || \
                                  ((TIME) == ADC_SampleTime_55Cycles) || \
                                  ((TIME) == ADC_SampleTime_71Cycles) || \
                                  ((TIME) == ADC_SampleTime_239Cycles))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="139" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga0ad335d835f54415194d448019569e00" prot="public" static="no">
        <name>ADC_IT_EOC</name>
        <initializer>((uint16_t)0x0220)</initializer>
        <briefdescription>
<para>ADC_interrupts_definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="151" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga2f5c7f9900c24250a0c6ccaa7cbca946" prot="public" static="no">
        <name>ADC_IT_AWD</name>
        <initializer>((uint16_t)0x0140)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="152" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gad439fc0cd69706704d47aeabfeddb631" prot="public" static="no">
        <name>ADC_IT_JEOC</name>
        <initializer>((uint16_t)0x0480)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="153" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gaf5f8d35930becff402eeb8220641432f" prot="public" static="no">
        <name>IS_ADC_IT</name>
        <param><defname>IT</defname></param>
        <initializer>((((IT) &amp; (uint16_t)0xF81F) == 0x00) &amp;&amp; ((IT) != 0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="155" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gacae69f04de1a0033f065864d868c006e" prot="public" static="no">
        <name>IS_ADC_GET_IT</name>
        <param><defname>IT</defname></param>
        <initializer>                           (((IT) == <ref refid="group__ADC__sampling__time_1ga0ad335d835f54415194d448019569e00" kindref="member">ADC_IT_EOC</ref>) || ((IT) == ADC_IT_AWD) || \
                           ((IT) == ADC_IT_JEOC))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="157" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1gadb75a4b430fb84950232b7a8f3a6a877" prot="public" static="no">
        <name>ADC_FLAG_AWD</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="164" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1gaf2c6fdf7e9ab63b778149e5fb56413d4" prot="public" static="no">
        <name>ADC_FLAG_EOC</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="165" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1ga4df8eea8ab83d98104ee15a339743a4e" prot="public" static="no">
        <name>ADC_FLAG_JEOC</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="166" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1ga278f4e866f4322c1120bf0db5301c432" prot="public" static="no">
        <name>ADC_FLAG_JSTRT</name>
        <initializer>((uint8_t)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="167" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1gad0c59ae7749c69b5b91f2c533db1b619" prot="public" static="no">
        <name>ADC_FLAG_STRT</name>
        <initializer>((uint8_t)0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="168" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1gac5b6fb60ec921255b05261ec04573470" prot="public" static="no">
        <name>IS_ADC_CLEAR_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>((((FLAG) &amp; (uint8_t)0xE0) == 0x00) &amp;&amp; ((FLAG) != 0x00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="169" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__flags__definition_1ga597eb68dfef9dbe0928ed14a1aedc710" prot="public" static="no">
        <name>IS_ADC_GET_FLAG</name>
        <param><defname>FLAG</defname></param>
        <initializer>                               (((FLAG) == ADC_FLAG_AWD) || ((FLAG) == ADC_FLAG_EOC) || \
                               ((FLAG) == ADC_FLAG_JEOC) || ((FLAG) == ADC_FLAG_JSTRT) || \
                               ((FLAG) == ADC_FLAG_STRT))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="170" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__regular__length_1ga1ea82167f6dccdef1d160675f4534584" prot="public" static="no">
        <name>IS_ADC_REGULAR_LENGTH</name>
        <param><defname>LENGTH</defname></param>
        <initializer>(((LENGTH) &gt;= 0x1) &amp;&amp; ((LENGTH) &lt;= 0x10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="178" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__data__align_1ga80b5d2f2b6b058bc498f58e0a92ad035" prot="public" static="no">
        <name>ADC_DataAlign_Right</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="184" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__data__align_1ga87c2b7021bc288174d5d6175dc267251" prot="public" static="no">
        <name>ADC_DataAlign_Left</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="185" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__data__align_1ga2903b620e3c61dc47ed8c0fbf4197801" prot="public" static="no">
        <name>IS_ADC_DATA_ALIGN</name>
        <param><defname>ALIGN</defname></param>
        <initializer>                                  (((ALIGN) == ADC_DataAlign_Right) || \
                                  ((ALIGN) == ADC_DataAlign_Left))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="186" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga63f95f9a45f4d718aabc9e429d860e9d" prot="public" static="no">
        <name>IS_ADC_INJECTED_RANK</name>
        <param><defname>RANK</defname></param>
        <initializer>(((RANK) &gt;= 0x1) &amp;&amp; ((RANK) &lt;= 0x4))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="193" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga4bcdca9d903a8d7ae0560044fbfaf1f6" prot="public" static="no">
        <name>ADC_SampleTime_1Cycles</name>
        <initializer>((uint8_t)0x00)</initializer>
        <briefdescription>
<para>ADC sampling_time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="197" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga7aeaf9d2e147655978dae6fd10134174" prot="public" static="no">
        <name>ADC_SampleTime_7Cycles</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="198" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gaba495c2911cdf31564626cbff0eacf53" prot="public" static="no">
        <name>ADC_SampleTime_13Cycles</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="199" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gad9b45e11b76b7046eddf67f72e2ad622" prot="public" static="no">
        <name>ADC_SampleTime_28Cycles</name>
        <initializer>((uint8_t)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="200" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga15fb26ec07ecf6259ab035e09c251b96" prot="public" static="no">
        <name>ADC_SampleTime_41Cycles</name>
        <initializer>((uint8_t)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="201" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga23afd2f4e5176ad2c98d01548a29fbfb" prot="public" static="no">
        <name>ADC_SampleTime_55Cycles</name>
        <initializer>((uint8_t)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="202" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gafb1c5cd8ecdffc4b2620ad9b83add56b" prot="public" static="no">
        <name>ADC_SampleTime_71Cycles</name>
        <initializer>((uint8_t)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="203" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1gaebefee198f74d6abf1e6e927f4636b47" prot="public" static="no">
        <name>ADC_SampleTime_239Cycles</name>
        <initializer>((uint8_t)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="204" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__sampling__time_1ga30e0307fa009e1c383d3047b48e94644" prot="public" static="no">
        <name>IS_ADC_SAMPLE_TIME</name>
        <param><defname>TIME</defname></param>
        <initializer>                                  (((TIME) == <ref refid="group__ADC__sampling__time_1ga4bcdca9d903a8d7ae0560044fbfaf1f6" kindref="member">ADC_SampleTime_1Cycles</ref>) || \
                                  ((TIME) == ADC_SampleTime_7Cycles) || \
                                  ((TIME) == ADC_SampleTime_13Cycles) || \
                                  ((TIME) == ADC_SampleTime_28Cycles) || \
                                  ((TIME) == ADC_SampleTime_41Cycles) || \
                                  ((TIME) == ADC_SampleTime_55Cycles) || \
                                  ((TIME) == ADC_SampleTime_71Cycles) || \
                                  ((TIME) == ADC_SampleTime_239Cycles))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="206" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga2975552a752f44085d9da54b4e76121e" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleRegEnable</name>
        <initializer>((uint32_t)0x00800200)</initializer>
        <briefdescription>
<para>ADC_analog_watchdog_selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="218" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaa9904271617ab69593ac68ae540047fb" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleInjecEnable</name>
        <initializer>((uint32_t)0x00400200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="219" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaffd35fc6ceb226ec3fb61fb52227820c" prot="public" static="no">
        <name>ADC_AnalogWatchdog_SingleRegOrInjecEnable</name>
        <initializer>((uint32_t)0x00C00200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="220" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga37f08e1a4a452a2c148341b3cfcdeb1e" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllRegEnable</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="221" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gae4d6a7ebb136d924f0c8bad2cbac0574" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllInjecEnable</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="222" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga25a299f4493aaae316521351198df084" prot="public" static="no">
        <name>ADC_AnalogWatchdog_AllRegAllInjecEnable</name>
        <initializer>((uint32_t)0x00C00000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="223" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga91f69979e0e449fef5a8b225a21e3eb9" prot="public" static="no">
        <name>ADC_AnalogWatchdog_None</name>
        <initializer>((uint32_t)0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="224" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga53ffa30f756569194342bfba80165544" prot="public" static="no">
        <name>IS_ADC_ANALOG_WATCHDOG</name>
        <param><defname>WATCHDOG</defname></param>
        <initializer>                                          (((WATCHDOG) == <ref refid="group__ADC__injected__rank_1ga2975552a752f44085d9da54b4e76121e" kindref="member">ADC_AnalogWatchdog_SingleRegEnable</ref>) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_SingleInjecEnable) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_SingleRegOrInjecEnable) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_AllRegEnable) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_AllInjecEnable) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_AllRegAllInjecEnable) || \
                                          ((WATCHDOG) == ADC_AnalogWatchdog_None))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="226" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga88cecf0c336d950115d7a52d599de816" prot="public" static="no">
        <name>CR1_DISCNUM_Reset</name>
        <initializer>((uint32_t)0xFFFF1FFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="235" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga95f4f653adde3407c116919c2b7d9c74" prot="public" static="no">
        <name>CR1_DISCEN_Set</name>
        <initializer>((uint32_t)0x00000800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="237" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga959f617e77853bff85ca5e8d6fba6611" prot="public" static="no">
        <name>CR1_DISCEN_Reset</name>
        <initializer>((uint32_t)0xFFFFF7FF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="238" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaa8478f12e212738e249a7fafb69d4dd4" prot="public" static="no">
        <name>CR1_JAUTO_Set</name>
        <initializer>((uint32_t)0x00000400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="241" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gab6c4a9f0a661bf7c5add35ea3a90b756" prot="public" static="no">
        <name>CR1_JAUTO_Reset</name>
        <initializer>((uint32_t)0xFFFFFBFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="242" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gafef4d16c890bf5e6eb381ad01c829309" prot="public" static="no">
        <name>CR1_JDISCEN_Set</name>
        <initializer>((uint32_t)0x00001000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="245" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gab6ffba92495342bd5f0a8b1fa216526b" prot="public" static="no">
        <name>CR1_JDISCEN_Reset</name>
        <initializer>((uint32_t)0xFFFFEFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="246" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gabe7e68383d281e58707a1cd749a3374e" prot="public" static="no">
        <name>CR1_AWDCH_Reset</name>
        <initializer>((uint32_t)0xFFFFFFE0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="249" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gae53703f0c718ecc5b3e1a69c60af3697" prot="public" static="no">
        <name>CR1_AWDMode_Reset</name>
        <initializer>((uint32_t)0xFF3FFDFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="252" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga67f7dd35ea3d1296677e5fc50b88fa90" prot="public" static="no">
        <name>CR1_CLEAR_Mask</name>
        <initializer>((uint32_t)0xFFF0FEFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="255" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga21779759f3d5d1389b114d7a1bb6fca1" prot="public" static="no">
        <name>CR2_ADON_Set</name>
        <initializer>((uint32_t)0x00000001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="258" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaa3eb5d77998387159508a57d7e09f459" prot="public" static="no">
        <name>CR2_ADON_Reset</name>
        <initializer>((uint32_t)0xFFFFFFFE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="259" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga7fa8ba27f5b249dd7cb0b6e53a25d6e2" prot="public" static="no">
        <name>CR2_DMA_Set</name>
        <initializer>((uint32_t)0x00000100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="262" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga8e674886185af86bc17d9266ddbdca7c" prot="public" static="no">
        <name>CR2_DMA_Reset</name>
        <initializer>((uint32_t)0xFFFFFEFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="263" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaf256d4606fbe82d7e4cdc8d177653b53" prot="public" static="no">
        <name>CR2_RSTCAL_Set</name>
        <initializer>((uint32_t)0x00000008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="266" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga6705aae168367a2d961e64dd9137ae3a" prot="public" static="no">
        <name>CR2_CAL_Set</name>
        <initializer>((uint32_t)0x00000004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="269" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gac40733c6a8918c16cd52fcade75a6de6" prot="public" static="no">
        <name>CR2_SWSTART_Set</name>
        <initializer>((uint32_t)0x00400000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="272" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaf39824995dbcbabf76697cd7116352d6" prot="public" static="no">
        <name>CR2_EXTTRIG_Set</name>
        <initializer>((uint32_t)0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="275" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga8a96cb9aac77bab199f3dff54da230a6" prot="public" static="no">
        <name>CR2_EXTTRIG_Reset</name>
        <initializer>((uint32_t)0xFFEFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="276" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gad9bed838631a650428d2318694a66094" prot="public" static="no">
        <name>CR2_EXTTRIG_SWSTART_Set</name>
        <initializer>((uint32_t)0x00500000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="279" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gad0a6e5cf09868318178434340ade2fe1" prot="public" static="no">
        <name>CR2_EXTTRIG_SWSTART_Reset</name>
        <initializer>((uint32_t)0xFFAFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="280" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gafa78c11893aa39ad2c0117414ae1704d" prot="public" static="no">
        <name>CR2_JEXTSEL_Reset</name>
        <initializer>((uint32_t)0xFFFF8FFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="283" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga20a54958799c567e9efaa0635aa18a99" prot="public" static="no">
        <name>CR2_JEXTTRIG_Set</name>
        <initializer>((uint32_t)0x00008000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="286" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga94404d5a0103c5e2d7ffa45956356931" prot="public" static="no">
        <name>CR2_JEXTTRIG_Reset</name>
        <initializer>((uint32_t)0xFFFF7FFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="287" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga5292617782f3327f2e1ed0bd9461704e" prot="public" static="no">
        <name>CR2_JSWSTART_Set</name>
        <initializer>((uint32_t)0x00200000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="290" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaac5989ccf10d806f2f6a70f925d6b130" prot="public" static="no">
        <name>CR2_JEXTTRIG_JSWSTART_Set</name>
        <initializer>((uint32_t)0x00208000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="293" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaaa2fb01c1649fde61115602559942ee2" prot="public" static="no">
        <name>CR2_JEXTTRIG_JSWSTART_Reset</name>
        <initializer>((uint32_t)0xFFDF7FFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="294" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga7f5e0f807edebbfcef4883f3ec42b9e8" prot="public" static="no">
        <name>CR2_TSVREFE_Set</name>
        <initializer>((uint32_t)0x00800000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="297" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gaa207bc0eeed8b546dc9536b02df633b5" prot="public" static="no">
        <name>CR2_TSVREFE_Reset</name>
        <initializer>((uint32_t)0xFF7FFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="298" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga49192361afb92aee0e3f1124ef1131a0" prot="public" static="no">
        <name>CR2_CLEAR_Mask</name>
        <initializer>((uint32_t)0xFFF1F7FD)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="301" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga8a04f115021dc5261562b4dc04c01109" prot="public" static="no">
        <name>SQR3_SQ_Set</name>
        <initializer>((uint32_t)0x0000001F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="304" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga2329f779aee00e5990d6430a01de8cb0" prot="public" static="no">
        <name>SQR2_SQ_Set</name>
        <initializer>((uint32_t)0x0000001F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="305" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga91fb5f63b765a543dfa419ea0219351b" prot="public" static="no">
        <name>SQR1_SQ_Set</name>
        <initializer>((uint32_t)0x0000001F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="306" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga6e3e238f38d7ff17939cbd5417fc51cc" prot="public" static="no">
        <name>SQR1_CLEAR_Mask</name>
        <initializer>((uint32_t)0xFF0FFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="309" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga5d460390dbe3b400b5e0fdf1e94929f0" prot="public" static="no">
        <name>JSQR_JSQ_Set</name>
        <initializer>((uint32_t)0x0000001F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="312" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga46af9e738702305be0127f6c15c4f7b0" prot="public" static="no">
        <name>JSQR_JL_Set</name>
        <initializer>((uint32_t)0x00300000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="315" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gac8d1173791ea10bac7c53a368d593a16" prot="public" static="no">
        <name>JSQR_JL_Reset</name>
        <initializer>((uint32_t)0xFFCFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="316" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga244048ec3ba9461a6609942def9a15ba" prot="public" static="no">
        <name>SMPR1_SMP_Set</name>
        <initializer>((uint32_t)0x00000007)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="319" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga6555beb1970c42125678d80530bba4d3" prot="public" static="no">
        <name>SMPR2_SMP_Set</name>
        <initializer>((uint32_t)0x00000007)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="320" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga5671a68d6f0d01c6c465ee7a3a8f3eea" prot="public" static="no">
        <name>JDR_Offset</name>
        <initializer>((uint8_t)0x28)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="323" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1ga35ecb1c96cfae175f5f00490e5e91e88" prot="public" static="no">
        <name>DR_ADDRESS</name>
        <initializer>((uint32_t)0x4001244C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="326" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ADC__injected__rank_1gab8dfaacb2f25e65ca755de71050ff270" prot="public" static="no">
        <name>IS_ADC_REGULAR_DISC_NUMBER</name>
        <param><defname>NUMBER</defname></param>
        <initializer>(((NUMBER) &gt;= 0x1) &amp;&amp; ((NUMBER) &lt;= 0x8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="329" column="9" bodyfile="libraries/driver/inc/at103_adc.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ADC__injected__rank_1ga31fa6bc09de17125e9db2830ce77c09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DeInit</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_DeInit</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Deinitializes the ADCx peripheral registers to their default reset values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="335" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="335" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gabbab6038cf8691404350625e477254f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_Init</definition>
        <argsstring>(ADC_TypeDef *ADCx, ADC_InitTypeDef *ADC_InitStruct)</argsstring>
        <name>ADC_Init</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type><ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref> *</type>
          <declname>ADC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Initializes the ADCx peripheral according to the specified parameters in the ADC_InitStruct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref> structure that contains the configuration information for the specified ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="342" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="342" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga6c6e754d1d0a98d56e465efaf73272ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_StructInit</definition>
        <argsstring>(ADC_InitTypeDef *ADC_InitStruct)</argsstring>
        <name>ADC_StructInit</name>
        <param>
          <type><ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref> *</type>
          <declname>ADC_InitStruct</declname>
        </param>
        <briefdescription>
<para>Fills each ADC_InitStruct member with its default value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADC_InitStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref> structure which will be initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="349" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="349" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga40882d399e3371755ed610c1134e634e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_Cmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_Cmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>:where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>:new state of the ADCx peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="356" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="356" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gac5881d5995818001584b27b137a8dbcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DMACmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_DMACmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC DMA request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC DMA transfer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="363" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="363" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gad4c84b54b539944f555488bf979f82b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ITConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT, FunctionalState NewState)</argsstring>
        <name>ADC_ITConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the specified ADC interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt sources to be enabled or disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the specified ADC interrupts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="371" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="371" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga3d542020ba28c1d16238a0defbee6d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ResetCalibration</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_ResetCalibration</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Resets the selected ADC calibration registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="377" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="377" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga113be9fe25add8d7496bed659c68e02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlagStatus</type>
        <definition>FlagStatus ADC_GetResetCalibrationStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetResetCalibrationStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC reset calibration registers status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FlagStatus :The new state of ADC reset calibration registers (SET or RESET). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="384" column="12" declfile="libraries/driver/inc/at103_adc.h" declline="384" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gadcba6341124a6aabfd2dd885ca8e5f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_StartCalibration</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_StartCalibration</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Starts the selected ADC calibration process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="390" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="390" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga7a728f699b487c7fa1694d7424967122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlagStatus</type>
        <definition>FlagStatus ADC_GetCalibrationStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetCalibrationStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC calibration status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FlagStatus the new state of ADC calibration(SET or RESET). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="397" column="12" declfile="libraries/driver/inc/at103_adc.h" declline="397" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga694130a8d1ad3c8877b7eddb29611b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SoftwareStartConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_SoftwareStartConvCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC software start conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC software start conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="404" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="404" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gaf1119583782ecbcec380efcb7eb74883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlagStatus</type>
        <definition>FlagStatus ADC_GetSoftwareStartConvStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetSoftwareStartConvStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC software start conversion status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FlagStatus the new state of ADC software start conversion(SET or RESET). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="411" column="12" declfile="libraries/driver/inc/at103_adc.h" declline="411" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga6eb241ba82d67d1371136c9132083937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DiscModeChannelCountConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t Number)</argsstring>
        <name>ADC_DiscModeChannelCountConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Number</declname>
        </param>
        <briefdescription>
<para>Configures the discontinuous mode for the selected ADC regular group channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Number</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the discontinuous mode regular channel count value. This number must be between 1 and 8. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="420" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="420" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga1909649d10253ce88d986ffbb94a4be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_DiscModeCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_DiscModeCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the discontinuous mode on regular group channel for the specified ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>: new state of the selected ADC discontinuous mode on regular group channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="427" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="427" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gac531adb577b648d4bb8881f2ed627d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_RegularChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</argsstring>
        <name>ADC_RegularChannelConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Rank</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_SampleTime</declname>
        </param>
        <briefdescription>
<para>:Configures for the selected ADC regular channel its corresponding rank in the sequencer and its sample time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC channel to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: The rank in the regular group sequencer. This parameter must be between 1 to 16. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_SampleTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample time value to be set for the selected channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="437" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="437" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga3ae92d7940a16c898223374a5857f509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_ExternalTrigConvCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>: Enables or disables the ADCx conversion through external trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC external trigger start of conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="444" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="444" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gaaf74221c285ec5dab5e66baf7bec6bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t ADC_GetConversionValue</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetConversionValue</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Returns the last ADCx conversion result data for regular channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t : The Data conversion value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="451" column="10" declfile="libraries/driver/inc/at103_adc.h" declline="451" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gac5a4792dc29ef7ff6bfbce9f37e8a668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ADC_GetDualModeConversionValue</definition>
        <argsstring>(void)</argsstring>
        <name>ADC_GetDualModeConversionValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the last ADC1 and ADC2 conversion result data in dual mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t The Data conversion value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="457" column="10" declfile="libraries/driver/inc/at103_adc.h" declline="457" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga1ff9c3b8e4bbdd2addfd227f1a506a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AutoInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_AutoInjectedConvCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC automatic injected group conversion after regular one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC auto injected conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="464" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="464" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga0b583b94183fa4ff287177b9ee808092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedDiscModeCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_InjectedDiscModeCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the discontinuous mode for injected group channel for the specified ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC discontinuous mode on injected group channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="471" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="471" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gafc02ce1e84e96b692adf085f61a0bca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigInjectedConvConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint32_t ADC_ExternalTrigInjecConv)</argsstring>
        <name>ADC_ExternalTrigInjectedConvConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ADC_ExternalTrigInjecConv</declname>
        </param>
        <briefdescription>
<para>Configures the ADCx external trigger for injected channels conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_ExternalTrigInjecConv</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC trigger to start injected conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="478" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="478" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gad81d134c083d8f407c819e6f4722d553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ExternalTrigInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_ExternalTrigInjectedConvCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the ADCx injected channels conversion through external trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC external trigger start of injected conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="485" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="485" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga5b141d5dbf5f417a11dfa622c8c149d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SoftwareStartInjectedConvCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, FunctionalState NewState)</argsstring>
        <name>ADC_SoftwareStartInjectedConvCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the selected ADC start of the injected channels conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the selected ADC software start injected conversion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="492" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="492" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga8765f8835b8cfed13dce3d8d71767dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlagStatus</type>
        <definition>FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx)</argsstring>
        <name>ADC_GetSoftwareStartInjectedConvCmdStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <briefdescription>
<para>Gets the selected ADC Software start injected conversion Status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FlagStatus :The new state of ADC software start injected conversion (SET or RESET). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="499" column="12" declfile="libraries/driver/inc/at103_adc.h" declline="499" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gae2b44bff080184e1cf6f2cb6b9bb3e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</argsstring>
        <name>ADC_InjectedChannelConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Rank</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_SampleTime</declname>
        </param>
        <briefdescription>
<para>Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC channel to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: The rank in the injected group sequencer. This parameter must be between 1 and 4. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_SampleTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample time value to be set for the selected channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="508" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="508" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga24eba90bc3ee955e07659a605011710d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_InjectedSequencerLengthConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t Length)</argsstring>
        <name>ADC_InjectedSequencerLengthConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
<para>Configures the sequencer length for injected channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Length</parametername>
</parameternamelist>
<parameterdescription>
<para>The sequencer length. This parameter must be a number between 1 to 4. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="515" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="515" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga07a942613088ab3ecfc3d97a20475920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_SetInjectedOffset</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)</argsstring>
        <name>ADC_SetInjectedOffset</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_InjectedChannel</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Offset</declname>
        </param>
        <briefdescription>
<para>Set the injected channels conversion value offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_InjectedChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC injected channel to set its offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset value for the selected ADC injected channel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="523" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="523" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga1dea5ed24571a2e0ce4cbd41c9c1ec46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t ADC_GetInjectedConversionValue</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_InjectedChannel)</argsstring>
        <name>ADC_GetInjectedConversionValue</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_InjectedChannel</declname>
        </param>
        <briefdescription>
<para>Returns the ADC injected channel conversion result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_InjectedChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>the converted ADC injected channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t : The Data conversion value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="531" column="10" declfile="libraries/driver/inc/at103_adc.h" declline="531" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gad017d69bec6e497afd35ba25ea22d86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogCmd</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint32_t ADC_AnalogWatchdog)</argsstring>
        <name>ADC_AnalogWatchdogCmd</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ADC_AnalogWatchdog</declname>
        </param>
        <briefdescription>
<para>Enables or disables the analog watchdog on single/all regular or injected channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_AnalogWatchdog</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="538" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="538" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga79588d02aa8e4147f21cb90a4708366d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogThresholdsConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t HighThreshold, uint16_t LowThreshold)</argsstring>
        <name>ADC_AnalogWatchdogThresholdsConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>HighThreshold</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>LowThreshold</declname>
        </param>
        <briefdescription>
<para>Configures the high and low thresholds of the analog watchdog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">HighThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog High threshold value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">LowThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the ADC analog watchdog Low threshold value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="546" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="546" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga03cef3d12292ffa2b8520524d5b0226c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_AnalogWatchdogSingleChannelConfig</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_Channel)</argsstring>
        <name>ADC_AnalogWatchdogSingleChannelConfig</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_Channel</declname>
        </param>
        <briefdescription>
<para>Configures the analog watchdog guarded single channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_Channel</parametername>
</parameternamelist>
<parameterdescription>
<para>: the ADC channel to configure for the analog watchdog. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="553" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="553" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga848682e2d7d3de9f8cf03ffa4c11f0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_TempSensorVrefintCmd</definition>
        <argsstring>(FunctionalState NewState)</argsstring>
        <name>ADC_TempSensorVrefintCmd</name>
        <param>
          <type>FunctionalState</type>
          <declname>NewState</declname>
        </param>
        <briefdescription>
<para>Enables or disables the temperature sensor and Vrefint channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">NewState</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of the temperature sensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="559" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="559" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gaa12546e51ec905c90a3aada432bd4633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlagStatus</type>
        <definition>FlagStatus ADC_GetFlagStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_FLAG)</argsstring>
        <name>ADC_GetFlagStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_FLAG</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified ADC flag is set or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FlagStatus <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="567" column="12" declfile="libraries/driver/inc/at103_adc.h" declline="567" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gaf34f36798f811b4a41321ea2d12118d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ClearFlag</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint8_t ADC_FLAG)</argsstring>
        <name>ADC_ClearFlag</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ADC_FLAG</declname>
        </param>
        <briefdescription>
<para>Clears the ADCx&apos;s pending flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_FLAG</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="574" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="574" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1gaa1d3b910a83dbf14d4f68c8eef058612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ITStatus</type>
        <definition>ITStatus ADC_GetITStatus</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT)</argsstring>
        <name>ADC_GetITStatus</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <briefdescription>
<para>Checks whether the specified ADC interrupt has occurred or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt source to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ITStatus :The new state of ADC_IT (SET or RESET). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="582" column="10" declfile="libraries/driver/inc/at103_adc.h" declline="582" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ADC__injected__rank_1ga601c6a67bd883eb631ecc7aa5e999b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_ClearITPendingBit</definition>
        <argsstring>(ADC_TypeDef *ADCx, uint16_t ADC_IT)</argsstring>
        <name>ADC_ClearITPendingBit</name>
        <param>
          <type>ADC_TypeDef *</type>
          <declname>ADCx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ADC_IT</declname>
        </param>
        <briefdescription>
<para>Clears the ADCx&apos;s interrupt pending bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ADCx</parametername>
</parameternamelist>
<parameterdescription>
<para>: where x can be 1 or 2 to select the ADC peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ADC_IT</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the ADC interrupt pending bit to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/driver/inc/at103_adc.h" line="589" column="6" declfile="libraries/driver/inc/at103_adc.h" declline="589" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains all the functions prototypes for the ADC firmware library. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>pantianwen (<ulink url="mailto:pantianwen@163.com">pantianwen@163.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2022-03-20 </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 Icore, Inc </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>AT103_ADC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AT103_ADC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;at103.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structADC__InitTypeDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="group__ADC__injected__rank_1ga0f9ec17ad585d66a54625213062c9260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__ADC__injected__rank_1ga0f9ec17ad585d66a54625213062c9260" kindref="member">ADC_Mode</ref>;<sp/></highlight></codeline>
<codeline lineno="22" refid="group__ADC__injected__rank_1gaaf44f54f22ab40bf8fae01f075aa4c87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctionalState<sp/><ref refid="group__ADC__injected__rank_1gaaf44f54f22ab40bf8fae01f075aa4c87" kindref="member">ADC_ScanConvMode</ref>;<sp/></highlight></codeline>
<codeline lineno="25" refid="group__ADC__injected__rank_1ga2149036a332281e70a36879a2396b8d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctionalState<sp/><ref refid="group__ADC__injected__rank_1ga2149036a332281e70a36879a2396b8d1" kindref="member">ADC_ContinuousConvMode</ref>;<sp/></highlight></codeline>
<codeline lineno="28" refid="group__ADC__injected__rank_1gae5d0c48e70c2a39355b7ab0cc1df8310" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__ADC__injected__rank_1gae5d0c48e70c2a39355b7ab0cc1df8310" kindref="member">ADC_ExternalTrigConv</ref>;<sp/></highlight></codeline>
<codeline lineno="31" refid="group__ADC__injected__rank_1ga622e89d8fba3900f20aaf40d5560ab7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__ADC__injected__rank_1ga622e89d8fba3900f20aaf40d5560ab7b" kindref="member">ADC_DataAlign</ref>;<sp/></highlight></codeline>
<codeline lineno="33" refid="group__ADC__injected__rank_1gad6f39a12ac32a2767085ac94e9338bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="group__ADC__injected__rank_1gad6f39a12ac32a2767085ac94e9338bc3" kindref="member">ADC_NbrOfChannel</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="group__ADC__injected__rank_1gacb2a706a010e0cda9fb0c76f6f6b80c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="group__ADC__injected__rank_1gacb2a706a010e0cda9fb0c76f6f6b80c6" kindref="member">resolution</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="at103__adc_8h_1a40ec353803e9470a5721ef5bf0b1ab24" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Channel_0<sp/><sp/>((uint8_t)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_1<sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_2<sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_3<sp/><sp/>((uint8_t)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_4<sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_5<sp/><sp/>((uint8_t)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_6<sp/><sp/>((uint8_t)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_7<sp/><sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_8<sp/><sp/>((uint8_t)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_9<sp/><sp/>((uint8_t)0x09)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_10<sp/>((uint8_t)0x0A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_11<sp/>((uint8_t)0x0B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_12<sp/>((uint8_t)0x0C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_13<sp/>((uint8_t)0x0D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_14<sp/>((uint8_t)0x0E)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_15<sp/>((uint8_t)0x0F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_16<sp/>((uint8_t)0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_17<sp/>((uint8_t)0x11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_TempSensor<sp/>((uint8_t)ADC_Channel_16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_Channel_Vrefint<sp/><sp/><sp/><sp/>((uint8_t)ADC_Channel_17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_CHANNEL(CHANNEL)<sp/>(((CHANNEL)<sp/>==<sp/>ADC_Channel_0)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_2)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_4)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_5)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_6)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_7)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_8)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_9)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_10)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_11)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_11)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_12)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_13)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_14)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_15)<sp/>||<sp/>((CHANNEL)<sp/>==<sp/>ADC_Channel_16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_ALL_PERIPH(PERIPH)<sp/>(((PERIPH)<sp/>==<sp/>ADC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PERIPH)<sp/>==<sp/>ADC2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="at103__adc_8h_1a2754d3a35559dc10e3d6a7d920e83432" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_Independent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0000)<sp/></highlight></codeline>
<codeline lineno="81" refid="at103__adc_8h_1a6014249f37aaa425bb691305c100e080" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_RegInjectSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0001)<sp/></highlight></codeline>
<codeline lineno="82" refid="at103__adc_8h_1ae3d5fbf93f60d75534364bf9db78f632" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_RegSimult_AlterTrig<sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0002)<sp/></highlight></codeline>
<codeline lineno="83" refid="at103__adc_8h_1a2fc8a737f7b2375309bccbcb7fdbbfeb" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_InjecSimult_FastInterl<sp/><sp/>((uint32_t)0x0003)<sp/></highlight></codeline>
<codeline lineno="84" refid="at103__adc_8h_1a760e65b105f3a2363233eb0109956e72" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_InjectSimult_SlowInterl<sp/>((uint32_t)0x0004)<sp/></highlight></codeline>
<codeline lineno="85" refid="at103__adc_8h_1adf64d2403079f944f9e034c5e87c7356" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_InjectSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0005)<sp/></highlight></codeline>
<codeline lineno="86" refid="at103__adc_8h_1a71298f7453c2b4392a9c622328b3c93d" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_RegSimult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0006)<sp/></highlight></codeline>
<codeline lineno="87" refid="at103__adc_8h_1a843ecdd53625e2088e91819e43106a7a" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_FastInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0007)<sp/></highlight></codeline>
<codeline lineno="88" refid="at103__adc_8h_1a8b81e27e98dbc3d1e31452dbad167cd5" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_SlowInterl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0008)<sp/></highlight></codeline>
<codeline lineno="89" refid="at103__adc_8h_1a5595f12dc485e301ba3bad0e165586c1" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_Mode_AlterTrig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0009)<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor">#define<sp/>IS_ADC_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>ADC_Mode_Independent)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegInjectSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegSimult_AlterTrig)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjecSimult_FastInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjectSimult_SlowInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_InjectSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_RegSimult)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_FastInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_SlowInterl)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>ADC_Mode_AlterTrig))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x020000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T2_CC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x060000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T3_TRGO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x080000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T4_CC4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x0A0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO<sp/>((uint32_t)0x0C0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_T1_CC3<sp/>((uint32_t)0x00040000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_ExternalTrigConv_None<sp/><sp/><sp/>((uint32_t)0x000E0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_EXT_TRIG(REGTRIG)<sp/>(((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T1_CC3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T2_CC2)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T3_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T4_CC4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_None)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T3_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T2_CC3)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T8_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T8_TRGO)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T5_CC1)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGTRIG)<sp/>==<sp/>ADC_ExternalTrigConv_T5_CC3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor">#define<sp/>ADC_SampleTime_1Cycles<sp/><sp/><sp/>((uint8_t)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_7Cycles<sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_13Cycles<sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_28Cycles<sp/><sp/>((uint8_t)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_41Cycles<sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_55Cycles<sp/><sp/>((uint8_t)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_71Cycles<sp/><sp/>((uint8_t)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_239Cycles<sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_SAMPLE_TIME(TIME)<sp/>(((TIME)<sp/>==<sp/>ADC_SampleTime_1Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_7Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_13Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_28Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_41Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_55Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_71Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_239Cycles))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__ADC__sampling__time_1ga0ad335d835f54415194d448019569e00" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_IT_EOC<sp/><sp/>((uint16_t)0x0220)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_IT_AWD<sp/><sp/>((uint16_t)0x0140)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_IT_JEOC<sp/>((uint16_t)0x0480)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_IT(IT)<sp/>((((IT)<sp/>&amp;<sp/>(uint16_t)0xF81F)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((IT)<sp/>!=<sp/>0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_GET_IT(IT)<sp/>(((IT)<sp/>==<sp/>ADC_IT_EOC)<sp/>||<sp/>((IT)<sp/>==<sp/>ADC_IT_AWD)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IT)<sp/>==<sp/>ADC_IT_JEOC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor">#define<sp/>ADC_FLAG_AWD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_JEOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_JSTRT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_FLAG_STRT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_CLEAR_FLAG(FLAG)<sp/>((((FLAG)<sp/>&amp;<sp/>(uint8_t)0xE0)<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>((FLAG)<sp/>!=<sp/>0x00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_GET_FLAG(FLAG)<sp/><sp/><sp/>(((FLAG)<sp/>==<sp/>ADC_FLAG_AWD)<sp/>||<sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_EOC)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_JEOC)<sp/>||<sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_JSTRT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((FLAG)<sp/>==<sp/>ADC_FLAG_STRT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor">#define<sp/>IS_ADC_REGULAR_LENGTH(LENGTH)<sp/>(((LENGTH)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((LENGTH)<sp/>&lt;=<sp/>0x10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">#define<sp/>ADC_DataAlign_Right<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_DataAlign_Left<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_DATA_ALIGN(ALIGN)<sp/>(((ALIGN)<sp/>==<sp/>ADC_DataAlign_Right)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ALIGN)<sp/>==<sp/>ADC_DataAlign_Left))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor">#define<sp/>IS_ADC_INJECTED_RANK(RANK)<sp/>(((RANK)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((RANK)<sp/>&lt;=<sp/>0x4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__ADC__sampling__time_1ga4bcdca9d903a8d7ae0560044fbfaf1f6" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_SampleTime_1Cycles<sp/><sp/><sp/>((uint8_t)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_7Cycles<sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_13Cycles<sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_28Cycles<sp/><sp/>((uint8_t)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_41Cycles<sp/><sp/>((uint8_t)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_55Cycles<sp/><sp/>((uint8_t)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_71Cycles<sp/><sp/>((uint8_t)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_SampleTime_239Cycles<sp/>((uint8_t)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_SAMPLE_TIME(TIME)<sp/>(((TIME)<sp/>==<sp/>ADC_SampleTime_1Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_7Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_13Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_28Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_41Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_55Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_71Cycles)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TIME)<sp/>==<sp/>ADC_SampleTime_239Cycles))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group__ADC__injected__rank_1ga2975552a752f44085d9da54b4e76121e" refkind="member"><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleRegEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleInjecEnable<sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_SingleRegOrInjecEnable<sp/>((uint32_t)0x00C00200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllRegEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00800000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllInjecEnable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00400000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_AllRegAllInjecEnable<sp/><sp/><sp/>((uint32_t)0x00C00000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_AnalogWatchdog_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)0x00000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_ANALOG_WATCHDOG(WATCHDOG)<sp/>(((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleRegEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_SingleRegOrInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllRegEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_AllRegAllInjecEnable)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WATCHDOG)<sp/>==<sp/>ADC_AnalogWatchdog_None))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>DISCNUM<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_DISCNUM_Reset<sp/>((uint32_t)0xFFFF1FFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>DISCEN<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_DISCEN_Set<sp/><sp/><sp/>((uint32_t)0x00000800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_DISCEN_Reset<sp/>((uint32_t)0xFFFFF7FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JAUTO<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_JAUTO_Set<sp/><sp/><sp/>((uint32_t)0x00000400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_JAUTO_Reset<sp/>((uint32_t)0xFFFFFBFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JDISCEN<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_JDISCEN_Set<sp/><sp/><sp/>((uint32_t)0x00001000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_JDISCEN_Reset<sp/>((uint32_t)0xFFFFEFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>AWDCH<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_AWDCH_Reset<sp/>((uint32_t)0xFFFFFFE0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>Analog<sp/>watchdog<sp/>enable<sp/>mode<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_AWDMode_Reset<sp/>((uint32_t)0xFF3FFDFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CR1<sp/>register<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR1_CLEAR_Mask<sp/>((uint32_t)0xFFF0FEFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>ADON<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_ADON_Set<sp/><sp/><sp/>((uint32_t)0x00000001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_ADON_Reset<sp/>((uint32_t)0xFFFFFFFE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>DMA<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_DMA_Set<sp/><sp/><sp/>((uint32_t)0x00000100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_DMA_Reset<sp/>((uint32_t)0xFFFFFEFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>RSTCAL<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_RSTCAL_Set<sp/>((uint32_t)0x00000008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>CAL<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_CAL_Set<sp/>((uint32_t)0x00000004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>SWSTART<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_SWSTART_Set<sp/>((uint32_t)0x00400000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>EXTTRIG<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_EXTTRIG_Set<sp/><sp/><sp/>((uint32_t)0x00100000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_EXTTRIG_Reset<sp/>((uint32_t)0xFFEFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>Software<sp/>start<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_EXTTRIG_SWSTART_Set<sp/><sp/><sp/>((uint32_t)0x00500000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_EXTTRIG_SWSTART_Reset<sp/>((uint32_t)0xFFAFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JEXTSEL<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JEXTSEL_Reset<sp/>((uint32_t)0xFFFF8FFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JEXTTRIG<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JEXTTRIG_Set<sp/><sp/><sp/>((uint32_t)0x00008000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JEXTTRIG_Reset<sp/>((uint32_t)0xFFFF7FFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JSWSTART<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JSWSTART_Set<sp/>((uint32_t)0x00200000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>injected<sp/>software<sp/>start<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JEXTTRIG_JSWSTART_Set<sp/><sp/><sp/>((uint32_t)0x00208000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_JEXTTRIG_JSWSTART_Reset<sp/>((uint32_t)0xFFDF7FFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>TSPD<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_TSVREFE_Set<sp/><sp/><sp/>((uint32_t)0x00800000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_TSVREFE_Reset<sp/>((uint32_t)0xFF7FFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CR2<sp/>register<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR2_CLEAR_Mask<sp/>((uint32_t)0xFFF1F7FD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>SQx<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQR3_SQ_Set<sp/>((uint32_t)0x0000001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQR2_SQ_Set<sp/>((uint32_t)0x0000001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQR1_SQ_Set<sp/>((uint32_t)0x0000001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SQR1<sp/>register<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQR1_CLEAR_Mask<sp/>((uint32_t)0xFF0FFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JSQx<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSQR_JSQ_Set<sp/>((uint32_t)0x0000001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JL<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSQR_JL_Set<sp/><sp/><sp/>((uint32_t)0x00300000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSQR_JL_Reset<sp/>((uint32_t)0xFFCFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>SMPx<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMPR1_SMP_Set<sp/>((uint32_t)0x00000007)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMPR2_SMP_Set<sp/>((uint32_t)0x00000007)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC<sp/>JDRx<sp/>registers<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JDR_Offset<sp/>((uint8_t)0x28)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC1<sp/>DR<sp/>register<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DR_ADDRESS<sp/>((uint32_t)0x4001244C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADC_regular_discontinuous_mode_number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ADC_REGULAR_DISC_NUMBER(NUMBER)<sp/>(((NUMBER)<sp/>&gt;=<sp/>0x1)<sp/>&amp;&amp;<sp/>((NUMBER)<sp/>&lt;=<sp/>0x8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga31fa6bc09de17125e9db2830ce77c09b" kindref="member">ADC_DeInit</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gabbab6038cf8691404350625e477254f9" kindref="member">ADC_Init</ref>(ADC_TypeDef<sp/>*ADCx,<sp/><ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref><sp/>*ADC_InitStruct);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga6c6e754d1d0a98d56e465efaf73272ec" kindref="member">ADC_StructInit</ref>(<ref refid="structADC__InitTypeDef" kindref="compound">ADC_InitTypeDef</ref><sp/>*ADC_InitStruct);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga40882d399e3371755ed610c1134e634e" kindref="member">ADC_Cmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gac5881d5995818001584b27b137a8dbcb" kindref="member">ADC_DMACmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gad4c84b54b539944f555488bf979f82b6" kindref="member">ADC_ITConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint16_t<sp/>ADC_IT,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga3d542020ba28c1d16238a0defbee6d8f" kindref="member">ADC_ResetCalibration</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">FlagStatus<sp/><ref refid="group__ADC__injected__rank_1ga113be9fe25add8d7496bed659c68e02b" kindref="member">ADC_GetResetCalibrationStatus</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gadcba6341124a6aabfd2dd885ca8e5f14" kindref="member">ADC_StartCalibration</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">FlagStatus<sp/><ref refid="group__ADC__injected__rank_1ga7a728f699b487c7fa1694d7424967122" kindref="member">ADC_GetCalibrationStatus</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga694130a8d1ad3c8877b7eddb29611b30" kindref="member">ADC_SoftwareStartConvCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">FlagStatus<sp/><ref refid="group__ADC__injected__rank_1gaf1119583782ecbcec380efcb7eb74883" kindref="member">ADC_GetSoftwareStartConvStatus</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga6eb241ba82d67d1371136c9132083937" kindref="member">ADC_DiscModeChannelCountConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>Number);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga1909649d10253ce88d986ffbb94a4be6" kindref="member">ADC_DiscModeCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gac531adb577b648d4bb8881f2ed627d52" kindref="member">ADC_RegularChannelConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_Channel,<sp/>uint8_t<sp/>Rank,<sp/>uint8_t<sp/>ADC_SampleTime);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga3ae92d7940a16c898223374a5857f509" kindref="member">ADC_ExternalTrigConvCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">uint16_t<sp/><ref refid="group__ADC__injected__rank_1gaaf74221c285ec5dab5e66baf7bec6bd3" kindref="member">ADC_GetConversionValue</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">uint32_t<sp/><ref refid="group__ADC__injected__rank_1gac5a4792dc29ef7ff6bfbce9f37e8a668" kindref="member">ADC_GetDualModeConversionValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga1ff9c3b8e4bbdd2addfd227f1a506a66" kindref="member">ADC_AutoInjectedConvCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga0b583b94183fa4ff287177b9ee808092" kindref="member">ADC_InjectedDiscModeCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gafc02ce1e84e96b692adf085f61a0bca6" kindref="member">ADC_ExternalTrigInjectedConvConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint32_t<sp/>ADC_ExternalTrigInjecConv);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gad81d134c083d8f407c819e6f4722d553" kindref="member">ADC_ExternalTrigInjectedConvCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga5b141d5dbf5f417a11dfa622c8c149d3" kindref="member">ADC_SoftwareStartInjectedConvCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">FlagStatus<sp/><ref refid="group__ADC__injected__rank_1ga8765f8835b8cfed13dce3d8d71767dcc" kindref="member">ADC_GetSoftwareStartInjectedConvCmdStatus</ref>(ADC_TypeDef<sp/>*ADCx);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gae2b44bff080184e1cf6f2cb6b9bb3e59" kindref="member">ADC_InjectedChannelConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_Channel,<sp/>uint8_t<sp/>Rank,<sp/>uint8_t<sp/>ADC_SampleTime);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga24eba90bc3ee955e07659a605011710d" kindref="member">ADC_InjectedSequencerLengthConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>Length);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga07a942613088ab3ecfc3d97a20475920" kindref="member">ADC_SetInjectedOffset</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_InjectedChannel,<sp/>uint16_t<sp/>Offset);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">uint16_t<sp/><ref refid="group__ADC__injected__rank_1ga1dea5ed24571a2e0ce4cbd41c9c1ec46" kindref="member">ADC_GetInjectedConversionValue</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_InjectedChannel);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gad017d69bec6e497afd35ba25ea22d86e" kindref="member">ADC_AnalogWatchdogCmd</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint32_t<sp/>ADC_AnalogWatchdog);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga79588d02aa8e4147f21cb90a4708366d" kindref="member">ADC_AnalogWatchdogThresholdsConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint16_t<sp/>HighThreshold,<sp/>uint16_t<sp/>LowThreshold);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga03cef3d12292ffa2b8520524d5b0226c" kindref="member">ADC_AnalogWatchdogSingleChannelConfig</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_Channel);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga848682e2d7d3de9f8cf03ffa4c11f0b5" kindref="member">ADC_TempSensorVrefintCmd</ref>(FunctionalState<sp/>NewState);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">FlagStatus<sp/><ref refid="group__ADC__injected__rank_1gaa12546e51ec905c90a3aada432bd4633" kindref="member">ADC_GetFlagStatus</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_FLAG);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1gaf34f36798f811b4a41321ea2d12118d4" kindref="member">ADC_ClearFlag</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint8_t<sp/>ADC_FLAG);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">ITStatus<sp/><ref refid="group__ADC__injected__rank_1gaa1d3b910a83dbf14d4f68c8eef058612" kindref="member">ADC_GetITStatus</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint16_t<sp/>ADC_IT);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ADC__injected__rank_1ga601c6a67bd883eb631ecc7aa5e999b9c" kindref="member">ADC_ClearITPendingBit</ref>(ADC_TypeDef<sp/>*ADCx,<sp/>uint16_t<sp/>ADC_IT);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libraries/driver/inc/at103_adc.h"/>
  </compounddef>
</doxygen>
